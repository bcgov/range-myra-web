kind: Template
apiVersion: v1
labels:
  template: postgresql-template
metadata:
  name: postgresql-dc
  creationTimestamp:
parameters:
  - name: PVC_SIZE
    value: 10G
    displayName: PVC Size
    description: PVC Size
    required: true
objects:
  - kind: Service
    apiVersion: v1
    metadata:
      name: postgresql
      labels:
        name: postgresql
    spec:
      ports:
        - name: postgresql
          protocol: TCP
          port: 5432
          targetPort: 5432
      selector:
        name: postgresql
      type: ClusterIP
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: postgresql
      name: postgresql
    spec:
      replicas: 1
      selector:
        app: postgresql
        deploymentconfig: postgresql
      strategy:
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: postgresql
            deploymentconfig: postgresql
        spec:
          containers:
          - env:
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: postgresql
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: postgresql
            - name: POSTGRESQL_DATABASE
              value: myra
            imagePullPolicy: Always
            name: postgresql
            livenessProbe:
              failureThreshold: 3
              initialDelaySeconds: 30
              periodSeconds: 10
              successThreshold: 1
              tcpSocket:
                port: 5432
              timeoutSeconds: 1
            readinessProbe:
              exec:
                command:
                  - /bin/sh
                  - '-i'
                  - '-c'
                  - >-
                    psql -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d
                    ${POSTGRESQL_DATABASE} -c 'SELECT 1'
              failureThreshold: 3
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            ports:
            - containerPort: 5432
              protocol: TCP
            resources:
              limits:
                memory: 256Mi
                cpu: 500m
              requests:
                memory: 256Mi
                cpu: 100m
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: volume-data
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
          - name: volume-data
            persistentVolumeClaim:
              claimName: postgresql-data
      test: false
      triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
          - postgresql
          from:
            kind: ImageStreamTag
            name: postgres-postgis:latest
            namespace: 3187b2-tools
        type: ImageChange
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: postgresql-data
      annotations:
        volume.beta.kubernetes.io/storage-class: netapp-block-standard
        template.openshift.io.bcgov/create: 'true'
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "${PVC_SIZE}"
